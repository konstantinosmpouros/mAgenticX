services:

  agents: # 8003
    container_name: agents
    image: agents
    build:
      context: ./agents
      dockerfile: Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - RAG_HOST=rag_service
      - RAG_PORT=8001
    depends_on:
      - rag_service
    restart: unless-stopped
    networks:
      - backend
      - frontend


  rag_service: # 8001
    container_name: rag_service
    image: rag_service
    build: 
      context: ./rag_service
      dockerfile: Dockerfile
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - RAG_HOST=vectordb
      - RAG_PORT=8000
    depends_on:
      - vectordb
    restart: unless-stopped
    networks:
      - backend
      - frontend


  vectordb: # 8000
    image: chromadb/chroma:0.6.3
    container_name: vectordb
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    volumes:
      - vectorstore:/chroma/chroma
    restart: unless-stopped
    networks:
      - backend


  dialogue_bridge: # 8002
    container_name: dialogue_bridge
    image: dialogue_bridge
    build:
      context: ./dialogue_bridge
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql+asyncpg://admin:admin@chat_postgres:5432/chat_db
      - username=admin
      - password=040298140aA!
    depends_on:
      - agents
      - chat_postgres
    restart: unless-stopped
    ports:
      - "8002:8002"
    networks: 
      - backend
      - frontend


  chat_postgres: # 5432
    image: postgres:latest
    container_name: chat_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: chat_db
    volumes:
      - chat_convs:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - backend
      - frontend


  agentic_ui: # 8050
    image: agentic_ui
    container_name: agentic_ui
    build:
      context: ./agentic_ui
      dockerfile: Dockerfile
    environment:
      - BFF_HOST=dialogue_bridge
      - BFF_PORT=8002
    depends_on: 
      - dialogue_bridge
    ports:
      - "8050:80"
    restart: unless-stopped
    networks: 
      - backend
      - frontend


  # streamlit_app: # 8501
  #   image: streamlit_app
  #   container_name: streamlit_app
  #   build:
  #     context: ./ui
  #     dockerfile: Dockerfile
  #   environment:
  #     - BFF_HOST=dialogue_bridge
  #     - BFF_PORT=8002
  #   depends_on: 
  #     - dialogue_bridge
  #   ports:
  #     - "8501:8501"
  #   restart: unless-stopped
  #   networks: 
  #     - backend
  #     - frontend


networks:
  backend:
    internal: true
  frontend: 


volumes:
  vectorstore:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./vectorstores/chroma_db_openai
  
  chat_convs:


